name: Telegram Notifications

on:
  push:
    branches: [ main, develop ]
  pull_request:
    types: [ opened, closed, merged ]
  workflow_run:
    workflows: ["CI/CD"]
    types: [ completed ]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Check Telegram Secrets
        id: check_secrets
        run: |
          if [ -z "${{ secrets.TELEGRAM_TOKEN }}" ]; then
            echo "::error::TELEGRAM_TOKEN secret is not set"
            echo "has_secrets=false" >> $GITHUB_OUTPUT
          elif [ -z "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            echo "::error::TELEGRAM_CHAT_ID secret is not set"
            echo "has_secrets=false" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Telegram secrets are configured"
            echo "has_secrets=true" >> $GITHUB_OUTPUT
          fi

      - name: Send Push Notification
        if: github.event_name == 'push' && steps.check_secrets.outputs.has_secrets == 'true'
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è Markdown
          COMMIT_MESSAGE=$(echo "${{ github.event.head_commit.message }}" | sed 's/[_*[\]()~`>#+=|{}.!-]/\\&/g')
          
          MESSAGE="üöÄ *New Push*
          
          üì¶ Repository: ${{ github.repository }}
          üåø Branch: ${{ github.ref_name }}
          üë§ Author: ${{ github.actor }}
          üìù Commit: \`${{ github.event.head_commit.id }}\`
          üí¨ Message: ${COMMIT_MESSAGE}
          
          [View Changes](https://github.com/${{ github.repository }}/commit/${{ github.sha }})"
          
          RESPONSE=$(curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{
              \"chat_id\": \"${TELEGRAM_CHAT_ID}\",
              \"text\": \"${MESSAGE}\",
              \"parse_mode\": \"Markdown\",
              \"disable_web_page_preview\": true
            }")
          
          # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
          if echo "$RESPONSE" | grep -q '"ok":true'; then
            echo "‚úÖ Notification sent successfully"
          else
            echo "‚ùå Failed to send notification"
            echo "Response: $RESPONSE"
            exit 1
          fi

      - name: Send PR Notification
        if: github.event_name == 'pull_request' && steps.check_secrets.outputs.has_secrets == 'true'
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ PR
          if [ "${{ github.event.action }}" == "opened" ]; then
            EMOJI="üìù"
            ACTION="opened"
          elif [ "${{ github.event.action }}" == "closed" ] && [ "${{ github.event.pull_request.merged }}" == "true" ]; then
            EMOJI="‚úÖ"
            ACTION="merged"
          elif [ "${{ github.event.action }}" == "closed" ]; then
            EMOJI="‚ùå"
            ACTION="closed"
          else
            EMOJI="üìã"
            ACTION="${{ github.event.action }}"
          fi
          
          # –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ PR
          PR_TITLE=$(echo "${{ github.event.pull_request.title }}" | sed 's/[_*[\]()~`>#+=|{}.!-]/\\&/g')
          
          MESSAGE="${EMOJI} *Pull Request ${ACTION}*
          
          üìã Title: ${PR_TITLE}
          üë§ Author: ${{ github.event.pull_request.user.login }}
          üîÄ Branch: ${{ github.event.pull_request.head.ref }} ‚Üí ${{ github.event.pull_request.base.ref }}
          
          [View PR #${{ github.event.pull_request.number }}](${{ github.event.pull_request.html_url }})"
          
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{
              \"chat_id\": \"${TELEGRAM_CHAT_ID}\",
              \"text\": \"${MESSAGE}\",
              \"parse_mode\": \"Markdown\",
              \"disable_web_page_preview\": true
            }"

      - name: Send Pipeline Status
        if: github.event_name == 'workflow_run' && steps.check_secrets.outputs.has_secrets == 'true'
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
          case "${{ github.event.workflow_run.conclusion }}" in
            "success")
              STATUS="‚úÖ Success"
              ;;
            "failure")
              STATUS="‚ùå Failed"
              ;;
            "cancelled")
              STATUS="‚ö†Ô∏è Cancelled"
              ;;
            "skipped")
              STATUS="‚è≠Ô∏è Skipped"
              ;;
            *)
              STATUS="üîÑ ${{ github.event.workflow_run.conclusion }}"
              ;;
          esac
          
          # –†–∞—Å—á–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
          DURATION_SECONDS=${{ github.event.workflow_run.run_duration || 0 }}
          DURATION_MINUTES=$((DURATION_SECONDS / 60))
          DURATION_REMAINING=$((DURATION_SECONDS % 60))
          
          MESSAGE="üîî *Pipeline Update*
          
          üì¶ Workflow: ${{ github.event.workflow_run.name }}
          üìä Status: ${STATUS}
          üåø Branch: ${{ github.event.workflow_run.head_branch }}
          ‚è±Ô∏è Duration: ${DURATION_MINUTES}m ${DURATION_REMAINING}s
          üë§ Triggered by: ${{ github.event.workflow_run.actor.login }}
          
          [View Run](${{ github.event.workflow_run.html_url }})"
          
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{
              \"chat_id\": \"${TELEGRAM_CHAT_ID}\",
              \"text\": \"${MESSAGE}\",
              \"parse_mode\": \"Markdown\",
              \"disable_web_page_preview\": true
            }"

      - name: Debug Information
        if: failure()
        run: |
          echo "‚ùå Workflow failed. Debug information:"
          echo "Event name: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "Ref: ${{ github.ref }}"
          echo ""
          echo "To fix this issue:"
          echo "1. Go to Settings ‚Üí Secrets and variables ‚Üí Actions"
          echo "2. Add TELEGRAM_TOKEN (your bot token without 'bot' prefix)"
          echo "3. Add TELEGRAM_CHAT_ID (your chat ID or group ID)"
          echo ""
          echo "Get your chat ID by sending a message to your bot and visiting:"
          echo "https://api.telegram.org/bot<YOUR_TOKEN>/getUpdates"