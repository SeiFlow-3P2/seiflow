networks:
  calendar_net:
    driver: bridge
  backend:
    external: true
    name: seiflow_backend

volumes:
  calendar_redis_data:
    driver: local

services:
  calendar_service:
    build: 
      context: ../../services/calendar_service
      dockerfile: Dockerfile
    container_name: calendar_service
    ports:
      - "${CALENDAR_SERVICE_PORT}:8092"
    networks:
      - calendar_net
      - backend
    depends_on:
      calendar_redis:
        condition: service_healthy
    environment:
      PORT: ${CALENDAR_SERVICE_PORT}
      APP_READ_TIMEOUT: ${CALENDAR_APP_READ_TIMEOUT}
      APP_WRITE_TIMEOUT: ${CALENDAR_APP_WRITE_TIMEOUT}
      APP_IDLE_TIMEOUT: ${CALENDAR_APP_IDLE_TIMEOUT}
      
      MONGO_URI: mongodb+srv://${CALENDAR_MONGO_ROOT_USERNAME}:${CALENDAR_MONGO_ROOT_PASSWORD}@calendar.kkbc5wl.mongodb.net/?retryWrites=true&w=majority&appName=${CALENDAR_MONGO_DATABASE}
      MONGO_TIMEOUT: ${CALENDAR_MONGO_TIMEOUT}
      MONGO_DATABASE: ${CALENDAR_MONGO_DATABASE}

      KAFKA_BROKERS_NOTIFICATION: ${KAFKA_BROKER}
      KAFKA_TOPIC_NOTIFICATION: ${CALENDAR_KAFKA_TOPIC_NOTIFICATION}
      KAFKA_GROUP_ID_BOARD_EVENTS: ${CALENDAR_KAFKA_GROUP_ID_BOARD_EVENTS}
      KAFKA_BROKERS_BOARD_EVENTS: ${KAFKA_BROKER}
      KAFKA_TOPIC_BOARD_EVENTS: ${KAFKA_TOPIC_BOARD_EVENTS}

      AUTH_SERVICE_ADDRESS: ${AUTH_SERVICE_ADDR}
      EVENT_NOTIFIER_INTERVAL_SECONDS: ${CALENDAR_EVENT_NOTIFIER_INTERVAL_SECONDS}
      OTEL_ADDR: ${OTEL_ADDR}
      PROMETHEUS_PORT: ${CALENDAR_PROMETHEUS_PORT}
    restart: unless-stopped

  calendar_redis:
    image: redis:7.4-alpine
    container_name: calendar_redis
    restart: unless-stopped
    ports:
      - "${CALENDAR_REDIS_PORT}:6379"
    volumes:
      - calendar_redis_data:/data
    networks:
      - calendar_net
    command: redis-server --requirepass ${CALENDAR_REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${CALENDAR_REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5