networks:
  payment_net:
    driver: bridge
  backend:
    driver: bridge

volumes:
  payment_postgres_data:
    driver: local
  payment_redis_data:
    driver: local

services:
  payment_service:
    build: ./services/payment_service
    container_name: payment_service
    ports:
      - "${PAYMENT_SERVICE_PORT}:8000"
    networks:
      - payment_net
      - backend
    depends_on:
      payment_postgres:
        condition: service_healthy
      payment_redis:
        condition: service_healthy
    environment:
      - DB_HOST=payment_postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${POSTGRES_DB}
      - REDIS_HOST=payment_redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: unless-stopped

  payment_postgres:
    image: postgres:15-alpine
    container_name: payment_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=${PGDATA}
    ports:
      - "${PAYMENT_POSTGRES_PORT}:5432"
    volumes:
      - payment_postgres_data:/var/lib/postgresql/data/pgdata
    networks:
      - payment_net
    command: >
      postgres -c max_connections=1000
               -c shared_buffers=256MB
               -c effective_cache_size=768MB
               -c maintenance_work_mem=64MB
               -c checkpoint_completion_target=0.7
               -c wal_buffers=16MB
               -c default_statistics_target=100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    tty: true
    stdin_open: true

  payment_redis:
    image: redis:latest
    container_name: payment_redis
    restart: unless-stopped
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_USER=${REDIS_USER}
      - REDIS_USER_PASSWORD=${REDIS_USER_PASSWORD}
    ports:
      - "${PAYMENT_REDIS_PORT}:6379"
    volumes:
      - payment_redis_data:/data
    networks:
      - payment_net
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: >
       redis-server /usr/local/etc/redis/redis.conf --aclfile /usr/local/etc/redis/users.acl
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    tty: true
    stdin_open: true